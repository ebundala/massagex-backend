type PaymentMethod {
          id: String!
          name: String!
          description: String
          logo: Attachment!
          attachmentId: String!
          code: SelcomUtilityCode!
          transactions(where: TransactionWhereInput
              orderBy: [TransactionOrderByInput!]
              cursor: TransactionWhereUniqueInput
              take: Int
              skip: Int
              distinct: [TransactionScalarFieldEnum!]
              ): [Transaction!]!
          recordStatus: RecordStatus!
          status: PaymentMethodStatus!
          metadata: JSONObject
          createdAt: DateTime!
          updatedAt: DateTime!
    }

      type PaymentMethodListResponse {
        status: Boolean!
        data: [PaymentMethod!]
        message: String!
      }
     

      type PaymentMethodResponse {
        status: Boolean!
        data: PaymentMethod
        message: String!
      }
      
      type PaymentMethodBatchResponse {
        status: Boolean!
        data: BatchPayload
        message: String!
      }
      type AggregatePaymentMethodResponse {
        status: Boolean!
        data: AggregatePaymentMethod
        message: String!
      }
      type PaymentMethodCountResponse {
        status: Boolean!
        data: Int
        message: String!
      }
      
extend type Query {

findManyPaymentMethod(
  where: PaymentMethodWhereInput
  orderBy: [PaymentMethodOrderByInput!]
  cursor: PaymentMethodWhereUniqueInput
  distinct: [PaymentMethodScalarFieldEnum!]
  skip: Int
  take: Int
): PaymentMethodListResponse!
}