
scalar EmailAddress
scalar PhoneNumber
scalar Json 

# input AuthInput {
# 	email: String!
# 	password: String!
# }

# input SignupInput {
# 	email: EmailAddress!
# 	password: String!
# 	displayName: String!
# 	phoneNumber: PhoneNumber
# 	gender: Gender
# 	dateOfBirth: DateTime
# 	avator:Upload
# 	business: BusinessCreateWithoutOwnerInput
# }

# enum AuthMode{
# 	EMAIL
# 	PHONE
# 	OAUTH
# 	ANONYMOUS
# }



# type AuthResult {
# 	token: String
# 	status: Boolean!
# 	message: String!
# 	data: User 
# }
# type SignOutResult {
# 	status: Boolean
# 	message: String
# }

extend type User{
	lastSeen: DateTime
	compoundRating: Float
	experience: Float
	isFavorited: Boolean
}

extend type Business{
	acceptance: Float
	cancelation: Float
	distance: Float
	clients: Int
	minPrice: Float
	workCompleted: Int
	isFavorited: Boolean
}

extend type Review{
	isFavorited: Boolean
}

extend type Comment{
	isFavorited: Boolean
}

extend type Service{
	isFavorited: Boolean
}

extend type Order{
	isFavorited: Boolean
	isExpired: Boolean
}

extend type Mutation {	
	notifyUserSignup(data:Json!,token:String!):Json
	getUserClaims(uid:String!,token:String!):Json
}